// Copyright (C) 2023 Quickwit, Inc.
//
// Quickwit is offered under the AGPL v3.0 and as commercial software.
// For commercial licensing, contact us at hello@quickwit.io.
//
// AGPL:
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.

syntax = "proto3";

package shard;

import "google/protobuf/timestamp.proto";


enum ShardState {
    /// The shard is open and accepting write requests.
    OPEN = 0;
    /// The shard is open and still accepts write requests, but should no longer be advertised to ingester routers.
    /// It is waiting for the its leader or follower to close it with its final replication position, after which write requests will be rejected.
    CLOSING = 1;
    /// The shard is closed and cannot be written to.
    /// It can be safely deleted if the checkpoint position is equal to the WAL replication position.
    CLOSED = 2;
}

message Shard {
    // Immutable fields
    string index_uid = 1;
    string source_id = 2;
    uint64 shard_id = 3;
    string leader_id = 4;
    optional string follower_id = 5;

    // Mutable fields
    ShardState shard_state = 8;
    optional uint64 replication_position_inclusive = 9;
    string publish_position_inclusive = 10;

    optional string lessee_id = 11;
    // google.protobuf.Timestamp lease_expiration_timestamp = 12; // TODO
    uint64 lease_expiration_timestamp_millis = 12;
}
